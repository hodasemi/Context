pub use VkAccessFlags::*;

#[repr(u32)]
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
pub enum VkAccessFlags {
    VK_ACCESS_INDIRECT_COMMAND_READ_BIT = 0x0000_0001,
    VK_ACCESS_INDEX_READ_BIT = 0x0000_0002,
    VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT = 0x0000_0004,
    VK_ACCESS_UNIFORM_READ_BIT = 0x0000_0008,
    VK_ACCESS_INPUT_ATTACHMENT_READ_BIT = 0x0000_0010,
    VK_ACCESS_SHADER_READ_BIT = 0x0000_0020,
    VK_ACCESS_SHADER_WRITE_BIT = 0x0000_0040,
    VK_ACCESS_COLOR_ATTACHMENT_READ_BIT = 0x0000_0080,
    VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT = 0x0000_0100,
    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT = 0x0000_0200,
    VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = 0x0000_0400,
    VK_ACCESS_TRANSFER_READ_BIT = 0x0000_0800,
    VK_ACCESS_TRANSFER_WRITE_BIT = 0x0000_1000,
    VK_ACCESS_HOST_READ_BIT = 0x0000_2000,
    VK_ACCESS_HOST_WRITE_BIT = 0x0000_4000,
    VK_ACCESS_MEMORY_READ_BIT = 0x0000_8000,
    VK_ACCESS_MEMORY_WRITE_BIT = 0x0001_0000,
    VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT = 0x0200_0000,
    VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT = 0x0400_0000,
    VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT = 0x0800_0000,
    VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT = 0x0010_0000,
    VK_ACCESS_COMMAND_PROCESS_READ_BIT_NVX = 0x0002_0000,
    VK_ACCESS_COMMAND_PROCESS_WRITE_BIT_NVX = 0x0004_0000,
    VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT = 0x0008_0000,
    VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV = 0x0080_0000,
    VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV = 0x0020_0000,
    VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV = 0x0040_0000,
    VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT = 0x0100_0000,
}

use crate::SetupVkFlags;

#[repr(C)]
#[derive(Clone, Copy, Eq, PartialEq, Hash)]
pub struct VkAccessFlagBits(u32);
SetupVkFlags!(VkAccessFlags, VkAccessFlagBits);
