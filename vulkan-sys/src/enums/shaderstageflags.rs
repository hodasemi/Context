pub use VkShaderStageFlags::*;

#[repr(u32)]
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
pub enum VkShaderStageFlags {
    VK_SHADER_STAGE_VERTEX_BIT = 0x0000_0001,
    VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT = 0x0000_0002,
    VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT = 0x0000_0004,
    VK_SHADER_STAGE_GEOMETRY_BIT = 0x0000_0008,
    VK_SHADER_STAGE_FRAGMENT_BIT = 0x0000_0010,
    VK_SHADER_STAGE_COMPUTE_BIT = 0x0000_0020,
    VK_SHADER_STAGE_ALL_GRAPHICS = 0x1F,
    VK_SHADER_STAGE_ALL = 0x7FFF_FFFF,
    VK_SHADER_STAGE_RAYGEN_BIT_NV = 0x0000_0100,
    VK_SHADER_STAGE_ANY_HIT_BIT_NV = 0x0000_0200,
    VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV = 0x0000_0400,
    VK_SHADER_STAGE_MISS_BIT_NV = 0x0000_0800,
    VK_SHADER_STAGE_INTERSECTION_BIT_NV = 0x0000_1000,
    VK_SHADER_STAGE_CALLABLE_BIT_NV = 0x0000_2000,
    VK_SHADER_STAGE_TASK_BIT_NV = 0x0000_0040,
    VK_SHADER_STAGE_MESH_BIT_NV = 0x0000_0080,
}

use crate::SetupVkFlags;

#[repr(C)]
#[derive(Clone, Copy, Eq, PartialEq, Hash)]
pub struct VkShaderStageFlagBits(u32);
SetupVkFlags!(VkShaderStageFlags, VkShaderStageFlagBits);
