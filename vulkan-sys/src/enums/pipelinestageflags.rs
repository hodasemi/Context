pub use VkPipelineStageFlags::*;

#[repr(u32)]
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
pub enum VkPipelineStageFlags {
    VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT = 0x0000_0001,
    VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT = 0x0000_0002,
    VK_PIPELINE_STAGE_VERTEX_INPUT_BIT = 0x0000_0004,
    VK_PIPELINE_STAGE_VERTEX_SHADER_BIT = 0x0000_0008,
    VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT = 0x0000_0010,
    VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = 0x0000_0020,
    VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT = 0x0000_0040,
    VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT = 0x0000_0080,
    VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT = 0x0000_0100,
    VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT = 0x0000_0200,
    VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT = 0x0000_0400,
    VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT = 0x0000_0800,
    VK_PIPELINE_STAGE_TRANSFER_BIT = 0x0000_1000,
    VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT = 0x0000_2000,
    VK_PIPELINE_STAGE_HOST_BIT = 0x0000_4000,
    VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT = 0x0000_8000,
    VK_PIPELINE_STAGE_ALL_COMMANDS_BIT = 0x0001_0000,
    VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT = 0x0100_0000,
    VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT = 0x0004_0000,
    VK_PIPELINE_STAGE_COMMAND_PROCESS_BIT_NVX = 0x0002_0000,
    VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV = 0x0040_0000,
    VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV = 0x0020_0000,
    VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV = 0x0200_0000,
    VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV = 0x0008_0000,
    VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV = 0x0010_0000,
    VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT = 0x0080_0000,
}

use crate::SetupVkFlags;

#[repr(C)]
#[derive(Clone, Copy, Eq, PartialEq, Hash)]
pub struct VkPipelineStageFlagBits(u32);
SetupVkFlags!(VkPipelineStageFlags, VkPipelineStageFlagBits);
